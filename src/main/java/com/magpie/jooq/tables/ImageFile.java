/*
 * This file is generated by jOOQ.
 */
package com.magpie.jooq.tables;


import com.magpie.jooq.Indexes;
import com.magpie.jooq.Keys;
import com.magpie.jooq.Magpie;
import com.magpie.jooq.tables.records.ImageFileRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImageFile extends TableImpl<ImageFileRecord> {

    private static final long serialVersionUID = -2005789665;

    /**
     * The reference instance of <code>magpie.image_file</code>
     */
    public static final ImageFile IMAGE_FILE = new ImageFile();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ImageFileRecord> getRecordType() {
        return ImageFileRecord.class;
    }

    /**
     * The column <code>magpie.image_file.id</code>.
     */
    public final TableField<ImageFileRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>magpie.image_file.file_name</code>.
     */
    public final TableField<ImageFileRecord, String> FILE_NAME = createField(DSL.name("file_name"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>magpie.image_file.file_url</code>.
     */
    public final TableField<ImageFileRecord, String> FILE_URL = createField(DSL.name("file_url"), org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>magpie.image_file.item_id</code>.
     */
    public final TableField<ImageFileRecord, Integer> ITEM_ID = createField(DSL.name("item_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>magpie.image_file</code> table reference
     */
    public ImageFile() {
        this(DSL.name("image_file"), null);
    }

    /**
     * Create an aliased <code>magpie.image_file</code> table reference
     */
    public ImageFile(String alias) {
        this(DSL.name(alias), IMAGE_FILE);
    }

    /**
     * Create an aliased <code>magpie.image_file</code> table reference
     */
    public ImageFile(Name alias) {
        this(alias, IMAGE_FILE);
    }

    private ImageFile(Name alias, Table<ImageFileRecord> aliased) {
        this(alias, aliased, null);
    }

    private ImageFile(Name alias, Table<ImageFileRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ImageFile(Table<O> child, ForeignKey<O, ImageFileRecord> key) {
        super(child, key, IMAGE_FILE);
    }

    @Override
    public Schema getSchema() {
        return Magpie.MAGPIE;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IMAGE_FILE_FK52UH28GE8VCTIU500MBWOCKPL, Indexes.IMAGE_FILE_PRIMARY);
    }

    @Override
    public Identity<ImageFileRecord, Integer> getIdentity() {
        return Keys.IDENTITY_IMAGE_FILE;
    }

    @Override
    public UniqueKey<ImageFileRecord> getPrimaryKey() {
        return Keys.KEY_IMAGE_FILE_PRIMARY;
    }

    @Override
    public List<UniqueKey<ImageFileRecord>> getKeys() {
        return Arrays.<UniqueKey<ImageFileRecord>>asList(Keys.KEY_IMAGE_FILE_PRIMARY);
    }

    @Override
    public List<ForeignKey<ImageFileRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ImageFileRecord, ?>>asList(Keys.FK52UH28GE8VCTIU500MBWOCKPL);
    }

    public Item item() {
        return new Item(this, Keys.FK52UH28GE8VCTIU500MBWOCKPL);
    }

    @Override
    public ImageFile as(String alias) {
        return new ImageFile(DSL.name(alias), this);
    }

    @Override
    public ImageFile as(Name alias) {
        return new ImageFile(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ImageFile rename(String name) {
        return new ImageFile(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ImageFile rename(Name name) {
        return new ImageFile(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
