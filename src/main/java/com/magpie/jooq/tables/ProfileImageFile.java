/*
 * This file is generated by jOOQ.
 */
package com.magpie.jooq.tables;


import com.magpie.jooq.Indexes;
import com.magpie.jooq.Keys;
import com.magpie.jooq.Magpie;
import com.magpie.jooq.tables.records.ProfileImageFileRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProfileImageFile extends TableImpl<ProfileImageFileRecord> {

    private static final long serialVersionUID = -1493274565;

    /**
     * The reference instance of <code>magpie.profile_image_file</code>
     */
    public static final ProfileImageFile PROFILE_IMAGE_FILE = new ProfileImageFile();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProfileImageFileRecord> getRecordType() {
        return ProfileImageFileRecord.class;
    }

    /**
     * The column <code>magpie.profile_image_file.id</code>.
     */
    public final TableField<ProfileImageFileRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>magpie.profile_image_file.file_name</code>.
     */
    public final TableField<ProfileImageFileRecord, String> FILE_NAME = createField(DSL.name("file_name"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>magpie.profile_image_file.file_url</code>.
     */
    public final TableField<ProfileImageFileRecord, String> FILE_URL = createField(DSL.name("file_url"), org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>magpie.profile_image_file.profile_id</code>.
     */
    public final TableField<ProfileImageFileRecord, Integer> PROFILE_ID = createField(DSL.name("profile_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>magpie.profile_image_file</code> table reference
     */
    public ProfileImageFile() {
        this(DSL.name("profile_image_file"), null);
    }

    /**
     * Create an aliased <code>magpie.profile_image_file</code> table reference
     */
    public ProfileImageFile(String alias) {
        this(DSL.name(alias), PROFILE_IMAGE_FILE);
    }

    /**
     * Create an aliased <code>magpie.profile_image_file</code> table reference
     */
    public ProfileImageFile(Name alias) {
        this(alias, PROFILE_IMAGE_FILE);
    }

    private ProfileImageFile(Name alias, Table<ProfileImageFileRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProfileImageFile(Name alias, Table<ProfileImageFileRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ProfileImageFile(Table<O> child, ForeignKey<O, ProfileImageFileRecord> key) {
        super(child, key, PROFILE_IMAGE_FILE);
    }

    @Override
    public Schema getSchema() {
        return Magpie.MAGPIE;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PROFILE_IMAGE_FILE_PRIMARY);
    }

    @Override
    public Identity<ProfileImageFileRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PROFILE_IMAGE_FILE;
    }

    @Override
    public UniqueKey<ProfileImageFileRecord> getPrimaryKey() {
        return Keys.KEY_PROFILE_IMAGE_FILE_PRIMARY;
    }

    @Override
    public List<UniqueKey<ProfileImageFileRecord>> getKeys() {
        return Arrays.<UniqueKey<ProfileImageFileRecord>>asList(Keys.KEY_PROFILE_IMAGE_FILE_PRIMARY);
    }

    @Override
    public ProfileImageFile as(String alias) {
        return new ProfileImageFile(DSL.name(alias), this);
    }

    @Override
    public ProfileImageFile as(Name alias) {
        return new ProfileImageFile(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ProfileImageFile rename(String name) {
        return new ProfileImageFile(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ProfileImageFile rename(Name name) {
        return new ProfileImageFile(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
